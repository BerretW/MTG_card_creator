
import { GoogleGenAI } from "@google/genai";

if (!process.env.API_KEY) {
  console.warn("API_KEY environment variable not set. AI features will be disabled.");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY! });

export const generateArt = async (prompt: string): Promise<string> => {
    if (!process.env.API_KEY) {
        throw new Error("API key is not configured. Cannot generate AI art.");
    }
    try {
        const response = await ai.models.generateImages({
            model: 'imagen-3.0-generate-002',
            prompt: `fantasy art, digital painting, intricate, elegant, highly detailed, concept art, smooth, sharp focus, illustration, in the style of mtg, ${prompt}`,
            config: {
              numberOfImages: 1,
              outputMimeType: 'image/jpeg',
              aspectRatio: '4:3',
            },
        });
        
        if (response.generatedImages && response.generatedImages.length > 0) {
            const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
            return `data:image/jpeg;base64,${base64ImageBytes}`;
        } else {
            throw new Error("No image was generated by the API.");
        }

    } catch (error) {
        console.error("Error generating image with Gemini API:", error);
        throw new Error("Failed to generate AI art. Please check the console for details.");
    }
};
